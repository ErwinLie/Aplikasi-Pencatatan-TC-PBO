/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pencatatan_tc_app;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class e_pengeluaran extends javax.swing.JFrame {

    /**
     * Creates new form e_pengeluaran
     */
    public e_pengeluaran() {
        initComponents();
        loadNamaSupir();  // Memuat nama supir ke JComboBox
        loadPlatTruck();
        loadKategori();
        load_table();
    }
    
    private void kosong(){
        
        nama_supir.setSelectedItem(null);
        plat_truck.setSelectedItem(null);
        date.setDate(null);
        deskripsi.setText(null);
        harga.setText(null);
        kategori.setSelectedItem(null);
}
    
    private void load_table() {
    // Membuat tampilan model tabel
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("No");
    model.addColumn("Nama");
    model.addColumn("Plat Truk");
    model.addColumn("Tanggal");
    model.addColumn("Deskripsi");
    model.addColumn("Harga");
    model.addColumn("Kategori");

    try {
        int no = 1;
        String sql = "SELECT ptc.tanggal, s.nama, tc.plat_truck, ptc.deskripsi, ptc.harga, "
                   + "k.kategori "
                   + "FROM tb_pencatatan_pengeluaran_tc ptc "
                   + "JOIN tb_supir s ON ptc.id_supir = s.id_supir "
                   + "JOIN tb_truck_crane tc ON ptc.id_truck_crane = tc.id_truck_crane "
                   + "JOIN tb_kategori k ON ptc.id_kategori = k.id_kategori";
        java.sql.Connection conn = (Connection) koneksi.configDB();
        java.sql.Statement stm = conn.createStatement();
        java.sql.ResultSet res = stm.executeQuery(sql);

        while (res.next()) {
            model.addRow(new Object[]{
                no++,
                res.getString("nama"),
                res.getString("plat_truck"),
                res.getDate("tanggal"),
                res.getString("deskripsi"),
                res.getString("harga"),
                res.getString("kategori")
            });
        }
        tbldata.setModel(model);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
}
    
    private void loadNamaSupir() {
    try (Connection conn = koneksi.configDB()) {
        String query = "SELECT nama FROM tb_supir";
        PreparedStatement stmt = conn.prepareStatement(query);
        ResultSet rs = stmt.executeQuery();
        
        nama_supir.removeAllItems(); // Bersihkan item yang ada sebelumnya
        while (rs.next()) {
            nama_supir.addItem(rs.getString("nama")); // Tambahkan nama supir ke JComboBox
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal memuat nama supir: " + e.getMessage());
    }
}

    
    private void loadPlatTruck() {
    try (Connection conn = koneksi.configDB()) {
        String query = "SELECT plat_truck FROM tb_truck_crane";
        PreparedStatement stmt = conn.prepareStatement(query);
        ResultSet rs = stmt.executeQuery();
        
        plat_truck.removeAllItems(); // Bersihkan item yang ada sebelumnya
        while (rs.next()) {
            plat_truck.addItem(rs.getString("plat_truck")); // Tambahkan plat truk ke JComboBox
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal memuat plat truk: " + e.getMessage());
    }
}
    
    private void loadKategori() {
    try (Connection conn = koneksi.configDB()) {
        String query = "SELECT kategori FROM tb_kategori";
        PreparedStatement stmt = conn.prepareStatement(query);
        ResultSet rs = stmt.executeQuery();
        
        kategori.removeAllItems(); // Bersihkan item yang ada sebelumnya
        while (rs.next()) {
            kategori.addItem(rs.getString("kategori")); // Tambahkan plat truk ke JComboBox
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal memuat kategori: " + e.getMessage());
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        deskripsi = new javax.swing.JTextField();
        harga = new javax.swing.JTextField();
        kategori = new javax.swing.JComboBox<>();
        nama_supir = new javax.swing.JComboBox<>();
        date = new com.toedter.calendar.JDateChooser();
        plat_truck = new javax.swing.JComboBox<>();
        btnedit = new javax.swing.JButton();
        btnhapus = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbldata = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("EDIT PEMASUKAN");

        jLabel2.setText("Nama :");

        jLabel3.setText("Plat Truk :");

        jLabel4.setText("Tanggal :");

        jLabel5.setText("Deskripsi :");

        jLabel6.setText("Harga :");

        jLabel7.setText("Kategori :");

        kategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        nama_supir.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        plat_truck.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnedit.setText("Edit");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        btnhapus.setText("Hapus");
        btnhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapusActionPerformed(evt);
            }
        });

        tbldata.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbldata.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbldataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbldata);

        jMenu1.setText("Menu");

        jMenuItem1.setText("Dashboard");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Pengeluaran");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Tambah Pengeluaran");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nama_supir, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(plat_truck, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deskripsi)
                    .addComponent(harga)
                    .addComponent(kategori, 0, 160, Short.MAX_VALUE))
                .addGap(136, 136, 136))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(318, 318, 318)
                        .addComponent(btnedit)
                        .addGap(96, 96, 96)
                        .addComponent(btnhapus))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(366, 366, 366)
                        .addComponent(jLabel1)))
                .addContainerGap(412, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(deskripsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nama_supir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(harga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plat_truck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel7)
                        .addComponent(kategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnedit)
                    .addComponent(btnhapus))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        this.dispose();
        new t_pengeluaran().setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        this.dispose();
        new dashboard().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        this.dispose();
        new pengeluaran().setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        try {
        // Create SQL query for updating data in the tb_pencatatan_pengeluaran_tc table
        String sql = "UPDATE tb_pencatatan_pengeluaran_tc SET "
                + "tanggal = ?, "
                + "id_supir = (SELECT id_supir FROM tb_supir WHERE nama = ? LIMIT 1), "
                + "id_truck_crane = (SELECT id_truck_crane FROM tb_truck_crane WHERE plat_truck = ? LIMIT 1), "
                + "deskripsi = ?, "
                + "harga = ?, "
                + "id_kategori = (SELECT id_kategori FROM tb_kategori WHERE kategori = ? LIMIT 1) "
                + "WHERE id_pengeluaran_tc = ?";

        // Establish a connection to the database
        try (Connection conn = (Connection) koneksi.configDB();
             PreparedStatement pst = conn.prepareStatement(sql)) {

            // Set values in the prepared statement
            pst.setDate(1, new java.sql.Date(date.getDate().getTime())); // Set the date
            pst.setString(2, nama_supir.getSelectedItem().toString());  // Set the supir name
            pst.setString(3, plat_truck.getSelectedItem().toString());  // Set the plat_truck
            pst.setString(4, deskripsi.getText());                      // Set the description
            pst.setString(5, harga.getText());                          // Set the price
            pst.setString(6, kategori.getSelectedItem().toString());    // Set the category

            // Retrieve the ID of the selected row (id_pengeluaran_tc)
            int selectedRow = tbldata.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "No row selected for editing.");
                return;
            }

            // Assuming the first column in tbldata is the 'id_pengeluaran_tc'
            String id = tbldata.getValueAt(selectedRow, 0).toString();
            
            // Set the id_pengeluaran_tc as the 7th parameter
            pst.setString(7, id);

            // Execute the update query
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Record updated successfully!");

        } catch (SQLException e) {
            // Handle SQL exception
            JOptionPane.showMessageDialog(null, "Update failed: " + e.getMessage());
        }

        // Reload the table and clear form fields
        load_table();
        kosong();

    } catch (Exception e) {
        // Handle general exceptions
        JOptionPane.showMessageDialog(null, "Unexpected error: " + e.getMessage());
    }
    }//GEN-LAST:event_btneditActionPerformed

    private void tbldataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbldataMouseClicked
        int selectedRow = tbldata.getSelectedRow();
    
    if (selectedRow != -1) {
        // Populate the form with selected row data
        nama_supir.setSelectedItem(tbldata.getValueAt(selectedRow, 1).toString());
        plat_truck.setSelectedItem(tbldata.getValueAt(selectedRow, 2).toString());
        date.setDate((java.util.Date) tbldata.getValueAt(selectedRow, 3));  // Convert java.sql.Date to java.util.Date
        deskripsi.setText(tbldata.getValueAt(selectedRow, 4).toString());
        harga.setText(tbldata.getValueAt(selectedRow, 5).toString());
        kategori.setSelectedItem(tbldata.getValueAt(selectedRow, 6).toString());
    }
    }//GEN-LAST:event_tbldataMouseClicked

    private void btnhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapusActionPerformed
        try{
            String sql = "delete from tb_pencatatan_pengeluaran_tc WHERE harga='"+harga.getText()+"'";
            java.sql.Connection conn=(Connection)koneksi.configDB();
            java.sql.PreparedStatement pst=conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(this, "Data Berhasil di Hapus");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        load_table();
        kosong();
    }//GEN-LAST:event_btnhapusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(e_pengeluaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(e_pengeluaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(e_pengeluaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(e_pengeluaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new e_pengeluaran().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnhapus;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JTextField deskripsi;
    private javax.swing.JTextField harga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> kategori;
    private javax.swing.JComboBox<String> nama_supir;
    private javax.swing.JComboBox<String> plat_truck;
    private javax.swing.JTable tbldata;
    // End of variables declaration//GEN-END:variables
}
